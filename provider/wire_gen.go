// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	"github.com/xh-polaris/psych-user/biz/adaptor"
	"github.com/xh-polaris/psych-user/biz/adaptor/controller"
	"github.com/xh-polaris/psych-user/biz/application/service"
	"github.com/xh-polaris/psych-user/biz/infrastructure/config"
	"github.com/xh-polaris/psych-user/biz/infrastructure/mapper/unit"
	"github.com/xh-polaris/psych-user/biz/infrastructure/mapper/user"
)

// Injectors from wire.go:

func NewProvider() (*adaptor.Server, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	mongoMapper := user.NewMongoMapper(configConfig)
	unitMongoMapper := unit.NewMongoMapper(configConfig)
	userService := &service.UserService{
		UserMapper: mongoMapper,
		UnitMapper: unitMongoMapper,
	}
	userController := &controller.UserController{
		UserService: userService,
	}
	unitService := &service.UnitService{
		UnitMapper: unitMongoMapper,
		UserMapper: mongoMapper,
	}
	unitController := &controller.UnitController{
		UnitService: unitService,
	}
	viewService := &service.ViewService{}
	viewController := &controller.ViewController{
		ViewService: viewService,
	}
	server := &adaptor.Server{
		IUserController: userController,
		IUnitController: unitController,
		IViewController: viewController,
	}
	return server, nil
}
